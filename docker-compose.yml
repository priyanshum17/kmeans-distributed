version: "3.9"

services:
  spark-master:
    image: bitnami/spark:latest            # official Bitnami Spark image
    build: ./docker/spark
    hostname: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_METRICS_CONF_FILE=/opt/bitnami/spark/conf/metrics.properties
      - EXTRA_JAVA_OPTIONS=-javaagent:/opt/jmx/jmx_prometheus_javaagent.jar=8090:/opt/jmx/config.yaml
    volumes:
      - ./docker/spark/spark-env.sh:/opt/bitnami/spark/conf/spark-env.sh
      - ./docker/spark/metrics.properties:/opt/bitnami/spark/conf/metrics.properties
      - ./docker/spark/config.yaml:/opt/jmx/config.yaml
      - ./src:/opt/spark-apps
      - jmx:/opt/jmx
    ports:
      - "7077:7077"
      - "8080:8080"
      - "8090:8090"      # JMX â†’ Prometheus
    networks: [snet]

  spark-worker:
    image: bitnami/spark:latest
    build: ./docker/spark
    depends_on: [spark-master]
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=256m         # matches assignment limit
      - EXTRA_JAVA_OPTIONS=-javaagent:/opt/jmx/jmx_prometheus_javaagent.jar=8090:/opt/jmx/config.yaml
    volumes:
      - ./docker/spark/spark-env.sh:/opt/bitnami/spark/conf/spark-env.sh
      - ./docker/spark/metrics.properties:/opt/bitnami/spark/conf/metrics.properties
      - ./docker/spark/config.yaml:/opt/jmx/config.yaml
      - jmx:/opt/jmx
    networks: [snet]
    deploy:
      replicas: 4                        # gives 5 workers total; override with `--scale` when needed

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports: ["9090:9090"]
    networks: [snet]

  grafana:
    image: grafana/grafana:latest
    ports: ["3000:3000"]
    networks: [snet]
    volumes:
      - ./docker/grafana/dashboards:/var/lib/grafana/dashboards

volumes:
  jmx:

networks:
  snet: